name: ojo
version: "0.1.0"
about: An educational and proof-of-concept version control system.
author: Joe Neeman <joeneeman@gmail.com>

subcommands:
    - branch:
        about: Various commands related to branches
        subcommands:
            - clone:
                about: Creates a copy of the current branch
                args:
                    - NAME:
                        help: name of the branch to create
                        required: true
                        takes_value: true
            - delete:
                about: Deletes a branch
                args:
                    - NAME:
                        help: name of the branch to delete
                        required: true
                        takes_value: true
            - list:
                about: Lists all branches
            - new:
                about: Creates a new, empty, branch
                args:
                    - NAME:
                        help: name of the branch to create
                        required: true
                        takes_value: true
            - switch:
                about: Switches the current branch
                args:
                    - NAME:
                        help: name of the branch to switch to
                        required: true
                        takes_value: true
    - clear:
        about: Deletes all patches from a branch (mainly for debugging)
        settings:
            - Hidden
        args:
            - branch:
                help: branch to clear
                long: branch
                takes_value: true
    - diff:
        about: Shows changes between commits
        args:
            - branch:
                help: the branch to diff against
                long: branch
                takes_value: true
            - path:
                help: path to the file (defaults to 'ojo_file.txt')
                long: path
                takes_value: true
    - graph:
        about: Creates a .dot file for visualizing the stored file
        args:
            - out:
                help: path for the output file (defaults to 'out.dot')
                short: o
                long: out
                takes_value: true
    - init:
        about: Creates a new ojo repository
    - log:
        about: Prints all of the patches present on a branch
        args:
            - branch:
                help: branch whose patches we want to print (defaults to the current branch)
                long: branch
                takes_value: true
    - patch:
        about: Various commands related to patches
        subcommands:
            - apply:
                about: Applies a patch to a branch. The patch must already exist in the repository
                args:
                    - PATCH:
                        help: hash of the patch
                        required: true
                        takes_value: true
                    - branch:
                        help: branch to apply the patch to (defaults to the current branch)
                        long: branch
                        takes_value: true
                    - revert:
                        help: if set, unapplies the patch instead of applying it
                        short: R
                        long: revert
            - create:
                about: Creates a patch by comparing against a file
                args:
                    - description:
                        help: message describing the patch
                        short: m
                        long: description
                        required: true
                        takes_value: true
                    - author:
                        help: the author of the patch
                        short: a
                        long: author
                        required: true
                        takes_value: true
                    - branch:
                        help: branch to compare against (defaults to the current branch)
                        long: branch
                        takes_value: true
                    - path:
                        help: path to the file (defaults to 'ojo_file.txt')
                        long: path
                        takes_value: true
                    - output-hash:
                        help: prints the hash value of the newly created patch to stdout
                        long: output-hash
                    - then-apply:
                        help: after creating the patch, apply it
                        long: then-apply
            - export:
                about: Creates a file containing the contents of a patch
                args:
                    - PATCH:
                        help: hash of the patch
                        required: true
                        takes_value: true
                    - output:
                        help: path to the output file (defaults to the hash of the patch)
                        long: output
                        short: o
                        takes_value: true
            - import:
                about: Imports a patch file into the respository
                args:
                    - PATH:
                        help: path to the patch file
                        required: true
                        takes_value: true
    - render:
        about: Outputs the tracked data to a file
        args:
            - branch:
                help: branch to output (defaults to the current branch)
            - path:
                help: path of the output (defaults to 'ojo_file.txt')
                long: path
                takes_value: true
    - resolve:
        about: Interactive utility to make the file totally ordered
        args:
            - branch:
                help: branch to work on
                long: branch
                takes_value: true
            - author:
                help: the person doing the resolving
                short: a
                long: author
                required: true
                takes_value: true
    - synthesize:
        about: Synthesizes a repository with an arbitrary graph (for testing)
        settings:
            - Hidden
